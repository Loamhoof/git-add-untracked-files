#!/usr/bin/env bash

while true; do
    files=$( git ls-files --others --exclude-standard )
    for file in $files; do
        read -p "Add $file [y,N,a,a#,r,r#,i,i#,e,e#]?"
        if [[ $REPLY =~ ^[yY]$ ]]; then
            git add $file
        elif [[ $REPLY =~ ^[aA] ]]; then
            if [[ $REPLY =~ ^[aA]$ ]]; then
                git add $file
            elif [[ $REPLY =~ ^[aA]([0-9])$ ]]; then
                ancestor=$file
                for i in $(seq 1 ${BASH_REMATCH[1]}); do
                    ancestor=$(dirname $ancestor)
                done
                git add $ancestor
                break
            fi
        elif [[ $REPLY =~ ^[rR] ]]; then
            if [[ $REPLY =~ ^[rR]$ ]]; then
                rm $file
            elif [[ $REPLY =~ ^[rR]([0-9])$ ]]; then
                ancestor=$file
                for i in $(seq 1 ${BASH_REMATCH[1]}); do
                    ancestor=$(dirname $ancestor)
                done
                rm -R $ancestor
                break
            fi
        elif [[ $REPLY =~ ^[iI] ]]; then
            gitignore="$( git rev-parse --show-toplevel )/.gitignore"
            echo "#Added by git-add-untracked-files" >> $gitignore
            if [[ $REPLY =~ ^[iI]$ ]]; then
                echo "/$file" >> $gitignore
            elif [[ $REPLY =~ ^[iI]([0-9])$ ]]; then
                ancestor=$file
                for i in $(seq 1 ${BASH_REMATCH[1]}); do
                    ancestor=$(dirname $ancestor)
                done
                echo "/$ancestor" >> $gitignore
                break
            fi
        elif [[ $REPLY =~ ^[eE] ]]; then
            gitexclude="$( git rev-parse --show-toplevel )/.git/info/exclude"
            if [[ $REPLY =~ ^[eE]$ ]]; then
                echo "/$file" >> $gitexclude
            elif [[ $REPLY =~ ^[eE]([0-9])$ ]]; then
                ancestor=$file
                for i in $(seq 1 ${BASH_REMATCH[1]}); do
                    ancestor=$(dirname $ancestor)
                done
                echo "/$ancestor" >> $gitexclude
                break
            fi
        fi
    done
    break
done
